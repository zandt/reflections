
Reflections lesson 2
====================

What happens when you initialize a repository? Why do you need to do it?
	Git creates a hidden directory where metadata and history about the repository is stored.


How is the staging area different from the working directory and the repository?
What value do you think it offers?
	The working directory contains all files.
	The staging area contains only files that should be included in the next commit.
	The repository contains versions of the committed files.
	The value of the staging area is that files can be committed separately.	


How can you use the staging area to make sure you have one commit per logical
change?
	By adding only those files belonging to the logical change to the staging area.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	Trying out new program features while keeping the master branch.
	Can be merged with the master branch later on.

How do the diagrams help you visualize the branch structure?
	You can see all the branches in a diagram, whereas git log only sees the parent commits
	to the current checkout.
	

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
	Changes from both branches are merged into a new commit.
	Because all commits from both branches will be preserved.


What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
	+ Automatic merging doesn't leave out any changes by mistake
	- Automatic merging sometimes still might require manual work solving conflicts
